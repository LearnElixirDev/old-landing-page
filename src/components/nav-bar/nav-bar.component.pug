svelte:window(on:scroll='onScroll()')

header.mdc-top-app-bar.mdc-elevation-transition(ref:header, class:mdc-elevation--z6='isPastTop')
  .mdc-top-app-bar__row
    .mdc-top-app-bar__section.justify-between
      a.db.w4(href='/')
        Icon(name='lure-logo' class='test')

      nav
        a.mr4.link.gray.hover-moon-gray(href='/') Home
        a.mr4.link.gray.hover-moon-gray(href='/process') Process
        a.mr4.link.gray.hover-moon-gray(href='/blog') Blog
        +if('isPastTop')
          MatButton
            a.white(href='/contact') Contact

          +else
            a.link.gray.hover-moon-gray(href='/contact') Contact

script.
  import './nav-bar.component.scss'

  import {MDCTopAppBar} from '@material/top-app-bar'

  import {Icon} from 'components/icon'
  import {MatButton} from 'components/mat-button'
  import {debounceTime} from 'helpers/util'

  let elementHeight = 64

  const setPastTop = debounceTime(100, (getPastTop, setPastTop) => {
    const newPastTop = window.scrollY > elementHeight

    if (getPastTop() !== newPastTop)
      setPastTop(newPastTop)
  })

  export default {
    components: {MatButton, Icon},

    data() {
      return {
        isPastTop: false
      }
    },

    oncreate() {
      MDCTopAppBar.attachTo(this.refs.header)
    },

    methods: {
      onScroll() {
        setPastTop(
          () => this.get().isPastTop,
          (isPastTop) => this.set({isPastTop})
        )
      }
    }
  }
